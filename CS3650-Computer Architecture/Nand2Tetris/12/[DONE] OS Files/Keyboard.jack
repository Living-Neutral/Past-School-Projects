// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

    static Array _keyboard;
    /** Initializes the keyboard. */
    function void init() 
    {
        let _keyboard = 24576;
        return;
    } 

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() 
    {
        return _keyboard[0];
    }

    /**								
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character 
     * of the pressed key.
     */
    function char readChar() 
    {
        var char _char;

        let _char = 0;
        while(_char = 0)
        {
            let _char = Keyboard.keyPressed();
        }
        while(~(Keyboard.keyPressed()=0))
        {

        }
        do Output.printChar(_char);
        return _char;
    }

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) 
    {
        var String _string;
        var char _char;
        let _string = String.new(64);

        do Output.printString(message);

        while(true)
        {
            let _char = Keyboard.readChar();
            if(_char = String.newline())
            {
                do Output.println();
                return _string;
            }

            else
            {
                if(_char = String.backspace())
                {
                    if(_string.length()>0)
                    {
                        do _string.eraseLastChar();
                    }
                }
                else{
                    let _string = _string.appendChar(_char);
                }

            }
        }

        return _string;

    }   

    /**								
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces. 
     */
    function int readInt(String message) 
    {
        var String s;
        let s = Keyboard.readLine(message);
        return s.intValue();
    }
}
